[package]
name = "zune-image"
version = "0.5.0-rc0"
edition = "2021"
authors = ["caleb <etemesicaleb@gmail.com>"]
repository = "https://github.com/etemesi254/zune-image/tree/dev/crates/zune-image"
license = "MIT OR Apache-2.0 OR Zlib"
keywords = ["image", "decoder", "encoder", "image-processing"]
categories = ["multimedia::images"]
description = "An image library, contiaining necessary capabilities to decode, manipulate and encode images"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
# Single based image decoders and encoders
log = ["zune-core/log"]
ppm = ["zune-ppm"]
jpeg = ["zune-jpeg", "jpeg-encoder"]
png = ["zune-png"]
psd = ["zune-psd"]
farbfeld = ["zune-farbfeld"]
qoi = ["zune-qoi"]
jpeg-xl = ["zune-jpegxl", "jxl-oxide"]
hdr = ["zune-hdr"]
bmp = ["zune-bmp"]
# Serde serialization support
serde-support = ["zune-core/serde", "serde"]
# All image formats
image_formats = ["jpeg", "ppm", "png", "psd", "farbfeld", "qoi", "jpeg-xl", "hdr", "bmp"]
# External crates that help us handle metadata
metadata = ["kamadak-exif"]
# Every supported thing
default = ["all"]
# Whether to use threads or not for some operations
threads = ["zune-jpegxl?/threads", "jxl-oxide?/rayon"]
# Simd support
simd = ["zune-jpeg?/x86", "zune-png?/sse", "avx2", "sse41"]
benchmarks = []
avx2 = []
sse41 = []

docs = []

all = ["image_formats", "serde-support", "metadata", "threads", "simd", "log"]

[dependencies]
#zune-imageprocs = { path = "../zune-imageprocs", optional = true }
# Core primitives
zune-core = { path = "../zune-core", version = "^0.5.0-rc0", features = ["std"] }
# Images
zune-png = { path = "../zune-png", version = "^0.5.0-rc0", optional = true, features = ["std"] }
zune-jpeg = { path = "../zune-jpeg", version = "^0.5.0-rc0", optional = true }
zune-ppm = { path = "../zune-ppm", version = "^0.5.0-rc0", optional = true }
zune-psd = { path = "../zune-psd", version = "^0.5.0-rc0", optional = true }
zune-farbfeld = { path = "../zune-farbfeld", version = "^0.5.0-rc0", optional = true }
zune-qoi = { path = "../zune-qoi", version = "^0.5.0-rc0", optional = true }
zune-jpegxl = { path = "../zune-jpegxl", version = "^0.5.0-rc0", optional = true }
zune-hdr = { path = "../zune-hdr", version = "^0.5.0-rc0", optional = true }
zune-bmp = { path = "../zune-bmp", version = "^0.5.0-rc0", optional = true }
# Channel conversions in a safe way
bytemuck = { version = "1.13", default-features = false }
# Serializing info
serde = { version = "1.0.152", optional = true }
# External image APIs
jpeg-encoder = { version = "0.6.0", optional = true, features = ["simd", "std"] }
jxl-oxide = { version = "0.8.0", optional = true }
# metadata
kamadak-exif = { version = "0.5.5", optional = true }
# Threads
#rayon = { version = "1.10.0", optional = true }


[dev-dependencies]
num-complex = "0.4.3" # Runs generate-fractals
nanorand = { version = "0.7.0", default-features = false, features = ["wyrand"] } # testing purposes.
